{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waris\\\\Desktop\\\\projects\\\\gptboss\\\\client\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport '../normal.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [input, setInput] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [question, setQuestion] = useState('');\n  const [text, setText] = useState('');\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog, {\n      user: \"me\",\n      message: `${input}`\n    }];\n    setInput('');\n    setChatLog(chatLogNew);\n    const messages = chatLogNew.map(message => message.message);\n    const response = await fetch('http://localhost:5000/api/chatbot', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: messages,\n        text: text\n      })\n    });\n    const data = await response.json();\n    await setChatLog([...chatLogNew, {\n      user: 'gpt',\n      message: data.bot_message\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        handleSubmit(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat-input-question\",\n        value: question,\n        onChange: e => setQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat-input-text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chatLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"8IIDT4NogX7ifjTv/+4XFUArDFY=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","Search","input","setInput","chatLog","setChatLog","question","setQuestion","text","setText","handleSubmit","e","preventDefault","chatLogNew","user","message","messages","map","response","fetch","method","headers","body","JSON","stringify","data","json","bot_message","target","value"],"sources":["C:/Users/waris/Desktop/projects/gptboss/client/src/pages/Search.jsx"],"sourcesContent":["\r\nimport '../App.css';\r\nimport '../normal.css';\r\nimport { useState }  from 'react';\r\n\r\n\r\n\r\n\r\nfunction Search() {\r\n\r\n    const [input, setInput] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [question, setQuestion] = useState('');\r\n  const [text, setText] = useState('');\r\n\r\n\r\nasync function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let chatLogNew = [...chatLog, { user: \"me\", message: `${input}`}];\r\n    setInput('');\r\n    setChatLog(chatLogNew);\r\n  \r\n    const messages = chatLogNew.map((message) => message.message);\r\n  \r\n    const response = await fetch('http://localhost:5000/api/chatbot', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ message: messages, text: text})\r\n    });\r\n  \r\n    const data = await response.json();\r\n    await setChatLog([...chatLogNew, { user: 'gpt', message: data.bot_message }]);\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <form onSubmit={(e) => {handleSubmit(e);}}>\r\n        <input className='chat-input-question' value={question} onChange={e => setQuestion(e.target.value)} />\r\n        <input className='chat-input-text' value={text} onChange={e => setText(e.target.value)} />\r\n        <input type=\"submit\" className='submit-btn' value=\"Send\"/>\r\n      </form>\r\n      <div>{chatLog}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":";;AACA,OAAO,YAAY;AACnB,OAAO,eAAe;AACtB,SAASA,QAAQ,QAAS,OAAO;AAAC;AAKlC,SAASC,MAAM,GAAG;EAAA;EAEd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAGtC,eAAeU,YAAY,CAACC,CAAC,EAAE;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,UAAU,GAAG,CAAC,GAAGT,OAAO,EAAE;MAAEU,IAAI,EAAE,IAAI;MAAEC,OAAO,EAAG,GAAEb,KAAM;IAAC,CAAC,CAAC;IACjEC,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAACQ,UAAU,CAAC;IAEtB,MAAMG,QAAQ,GAAGH,UAAU,CAACI,GAAG,CAAEF,OAAO,IAAKA,OAAO,CAACA,OAAO,CAAC;IAE7D,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,OAAO,EAAEC,QAAQ;QAAER,IAAI,EAAEA;MAAI,CAAC;IACvD,CAAC,CAAC;IAEF,MAAMiB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAClC,MAAMrB,UAAU,CAAC,CAAC,GAAGQ,UAAU,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAEU,IAAI,CAACE;IAAY,CAAC,CAAC,CAAC;EAC/E;EAEA,oBAEE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAM,QAAQ,EAAGhB,CAAC,IAAK;QAACD,YAAY,CAACC,CAAC,CAAC;MAAC,CAAE;MAAA,wBACxC;QAAO,SAAS,EAAC,qBAAqB;QAAC,KAAK,EAAEL,QAAS;QAAC,QAAQ,EAAEK,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACiB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACtG;QAAO,SAAS,EAAC,iBAAiB;QAAC,KAAK,EAAErB,IAAK;QAAC,QAAQ,EAAEG,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACiB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1F;QAAO,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,YAAY;QAAC,KAAK,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACrD,eACP;MAAA,UAAMzB;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEV;AAAC,GAvCQH,MAAM;AAAA,KAANA,MAAM;AAyCf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}